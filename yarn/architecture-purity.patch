diff --git a/packages/yarnpkg-core/sources/Configuration.ts b/packages/yarnpkg-core/sources/Configuration.ts
index 414112bd..294d939a 100644
--- a/packages/yarnpkg-core/sources/Configuration.ts
+++ b/packages/yarnpkg-core/sources/Configuration.ts
@@ -1785,6 +1785,19 @@ export class Configuration {
     return {os, cpu, libc};
   }
 
+  getSupportedArchitecturePurity(): nodeUtils.ArchitectureSetPurity {
+    const supportedArchitectures = this.get(`supportedArchitectures`);
+    const os = supportedArchitectures.get(`os`) ?? [ `current` ];
+    const cpu = supportedArchitectures.get(`cpu`) ?? [ `current` ];
+    const libc = supportedArchitectures.get(`libc`) ?? [ `current` ];
+
+    return {
+      os: !os.includes(`current`),
+      cpu: !cpu.includes(`current`),
+      libc: !libc.includes(`current`),
+    };
+  }
+
   private packageExtensions: PackageExtensions | null = null;
 
   /**
diff --git a/packages/yarnpkg-core/sources/Project.ts b/packages/yarnpkg-core/sources/Project.ts
index a2201624..746fd463 100644
--- a/packages/yarnpkg-core/sources/Project.ts
+++ b/packages/yarnpkg-core/sources/Project.ts
@@ -820,6 +820,7 @@ export class Project {
     // the number of async tasks being listed in the report, although it's strange this doesn't occur on other systems.
     const currentArchitecture = nodeUtils.getArchitectureSet();
     const supportedArchitectures = this.configuration.getSupportedArchitectures();
+    const supportedArchitecturePurity = this.configuration.getSupportedArchitecturePurity();
 
     await opts.report.startProgressPromise(Report.progressViaTitle(), async progress => {
       const startPackageResolution = async (locator: Locator) => {
@@ -1047,6 +1048,10 @@ export class Project {
         }
 
         disabledLocators.add(pkg.locatorHash);
+      } else {
+        if (structUtils.isPackageUnconditional(pkg, supportedArchitecturePurity)) {
+          continue;
+        }
       }
 
       conditionalLocators.add(pkg.locatorHash);
diff --git a/packages/yarnpkg-core/sources/nodeUtils.ts b/packages/yarnpkg-core/sources/nodeUtils.ts
index cdd863a0..4c6dc91e 100644
--- a/packages/yarnpkg-core/sources/nodeUtils.ts
+++ b/packages/yarnpkg-core/sources/nodeUtils.ts
@@ -78,6 +78,12 @@ export type ArchitectureSet = {
   libc: Array<string> | null;
 };
 
+export type ArchitectureSetPurity = {
+  os: boolean;
+  cpu: boolean;
+  libc: boolean;
+};
+
 let architecture: Architecture | undefined;
 let architectureSet: ArchitectureSet | undefined;
 
diff --git a/packages/yarnpkg-core/sources/structUtils.ts b/packages/yarnpkg-core/sources/structUtils.ts
index b47708eb..8d7cfdb2 100644
--- a/packages/yarnpkg-core/sources/structUtils.ts
+++ b/packages/yarnpkg-core/sources/structUtils.ts
@@ -879,3 +879,13 @@ export function isPackageCompatible(pkg: Package, architectures: nodeUtils.Archi
     return supported ? supported.includes(value) : true;
   });
 }
+
+export function isPackageUnconditional(pkg: Package, architecturePurity: nodeUtils.ArchitectureSetPurity) {
+  if (!pkg.conditions)
+    return true;
+
+  return conditionParser(pkg.conditions, specifier => {
+    const [, name] = specifier.match(CONDITION_REGEX)!;
+    return architecturePurity[name as keyof typeof architecturePurity];
+  });
+}
